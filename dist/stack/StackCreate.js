"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StackCreate = void 0;
const Model_1 = require("../Model");
class StackCreate {
    constructor(get, context) {
        this.get = get;
        this.context = context;
    }
    get uid() {
        return this.context.uid;
    }
    async model(name, obj = {}) {
        let model = await this.get.model(name);
        if (model !== undefined) {
            throw new Error(`A Model with the name ${name} already exists`);
        }
        let id = await this.uid.generate();
        model = new Model_1.Model(name, id, this.context);
        await model.append(obj);
        return model;
    }
    async object(modelName, obj) {
        let model = await this.get.model(modelName);
        if (model === undefined) {
            throw new Error(`No Model has been found with the name ${modelName}`);
        }
        return await model.create(obj);
    }
}
exports.StackCreate = StackCreate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhY2tDcmVhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3RhY2svU3RhY2tDcmVhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0NBQWdGO0FBc0JoRixNQUFhLFdBQVc7SUFLckIsWUFBcUIsR0FBYyxFQUFXLE9BQXNCO1FBQS9DLFFBQUcsR0FBSCxHQUFHLENBQVc7UUFBVyxZQUFPLEdBQVAsT0FBTyxDQUFlO0lBRXBFLENBQUM7SUFORCxJQUFZLEdBQUc7UUFDWixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFBO0lBQzFCLENBQUM7SUFNRCxLQUFLLENBQUMsS0FBSyxDQUFDLElBQVksRUFBRSxNQUF5QixFQUFFO1FBQ2xELElBQUksS0FBSyxHQUFHLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUE7UUFFdEMsSUFBRyxLQUFLLEtBQUssU0FBUyxFQUFFO1lBQ3JCLE1BQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLElBQUksaUJBQWlCLENBQUMsQ0FBQTtTQUNqRTtRQUVELElBQUksRUFBRSxHQUFHLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUVsQyxLQUFLLEdBQUcsSUFBSSxhQUFLLENBQUMsSUFBSSxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDekMsTUFBTSxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBQ3ZCLE9BQU8sS0FBSyxDQUFBO0lBQ2YsQ0FBQztJQUVELEtBQUssQ0FBQyxNQUFNLENBQUksU0FBaUIsRUFBRSxHQUF1QjtRQUN2RCxJQUFJLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBRTNDLElBQUcsS0FBSyxLQUFLLFNBQVMsRUFBRTtZQUNyQixNQUFNLElBQUksS0FBSyxDQUFDLHlDQUF5QyxTQUFTLEVBQUUsQ0FBQyxDQUFBO1NBQ3ZFO1FBRUQsT0FBTyxNQUFNLEtBQUssQ0FBQyxNQUFNLENBQUksR0FBRyxDQUFDLENBQUE7SUFDcEMsQ0FBQztDQUNIO0FBaENELGtDQWdDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElNb2RlbCwgTW9kZWwsIE1vZGVsQ3JlYXRlUGFyYW1zLCBPYmplY3RDcmVhdGVQYXJhbXMgfSBmcm9tIFwiLi4vTW9kZWxcIjtcbmltcG9ydCB7IElVaWRLZWVwZXIgfSBmcm9tIFwiLi4vVWlkS2VlcGVyXCI7XG5pbXBvcnQgeyBJU3RhY2tDb250ZXh0IH0gZnJvbSBcIi4vU3RhY2tDb250ZXh0XCI7XG5pbXBvcnQgeyBJU3RhY2tHZXQgfSBmcm9tIFwiLi9TdGFja0dldFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIElTdGFja0NyZWF0ZSB7XG4gICAvKipcbiAgICAqIENyZWF0ZXMgYSBNb2RlbFxuICAgICogXG4gICAgKiBAcGFyYW0gbmFtZSBUaGUgbmFtZSBvZiB0aGUgTW9kZWxcbiAgICAqIEBwYXJhbSBvYmogVGhlIGluaXRpYWxpemVkIHZhbHVlc1xuICAgICovXG4gICBtb2RlbChuYW1lOiBzdHJpbmcsIG9iaj86IE1vZGVsQ3JlYXRlUGFyYW1zKTogUHJvbWlzZTxJTW9kZWw+XG5cbiAgIC8qKlxuICAgICogQ3JlYXRlcyBhbiBPYmplY3QgYmFzZWQgb24gYSBNb2RlbFxuICAgICogXG4gICAgKiBAcGFyYW0gbW9kZWxOYW1lIFRoZSBuYW1lIG9mIHRoZSBNb2RlbCB1c2VkIHRvIGNyZWF0ZSB0aGUgT2JqZWN0XG4gICAgKi9cbiAgIG9iamVjdDxUPihtb2RlbE5hbWU6IHN0cmluZywgb2JqOiBPYmplY3RDcmVhdGVQYXJhbXMpOiBQcm9taXNlPFQ+XG59XG5cbmV4cG9ydCBjbGFzcyBTdGFja0NyZWF0ZSBpbXBsZW1lbnRzIElTdGFja0NyZWF0ZSB7XG4gICBwcml2YXRlIGdldCB1aWQoKTogSVVpZEtlZXBlciB7XG4gICAgICByZXR1cm4gdGhpcy5jb250ZXh0LnVpZFxuICAgfVxuXG4gICBjb25zdHJ1Y3RvcihyZWFkb25seSBnZXQ6IElTdGFja0dldCwgcmVhZG9ubHkgY29udGV4dDogSVN0YWNrQ29udGV4dCkge1xuXG4gICB9XG5cbiAgIGFzeW5jIG1vZGVsKG5hbWU6IHN0cmluZywgb2JqOiBNb2RlbENyZWF0ZVBhcmFtcyA9IHt9KTogUHJvbWlzZTxJTW9kZWw+IHtcbiAgICAgIGxldCBtb2RlbCA9IGF3YWl0IHRoaXMuZ2V0Lm1vZGVsKG5hbWUpXG5cbiAgICAgIGlmKG1vZGVsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQSBNb2RlbCB3aXRoIHRoZSBuYW1lICR7bmFtZX0gYWxyZWFkeSBleGlzdHNgKVxuICAgICAgfVxuXG4gICAgICBsZXQgaWQgPSBhd2FpdCB0aGlzLnVpZC5nZW5lcmF0ZSgpXG5cbiAgICAgIG1vZGVsID0gbmV3IE1vZGVsKG5hbWUsIGlkLCB0aGlzLmNvbnRleHQpXG4gICAgICBhd2FpdCBtb2RlbC5hcHBlbmQob2JqKVxuICAgICAgcmV0dXJuIG1vZGVsXG4gICB9XG5cbiAgIGFzeW5jIG9iamVjdDxUPihtb2RlbE5hbWU6IHN0cmluZywgb2JqOiBPYmplY3RDcmVhdGVQYXJhbXMpOiBQcm9taXNlPFQ+IHtcbiAgICAgIGxldCBtb2RlbCA9IGF3YWl0IHRoaXMuZ2V0Lm1vZGVsKG1vZGVsTmFtZSlcblxuICAgICAgaWYobW9kZWwgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBNb2RlbCBoYXMgYmVlbiBmb3VuZCB3aXRoIHRoZSBuYW1lICR7bW9kZWxOYW1lfWApXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhd2FpdCBtb2RlbC5jcmVhdGU8VD4ob2JqKVxuICAgfSAgIFxufSJdfQ==