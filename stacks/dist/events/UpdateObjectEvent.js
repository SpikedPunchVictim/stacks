"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateObjectEvent = void 0;
const Event_1 = require("./Event");
class UpdateObjectEvent extends Event_1.Event {
    constructor(model, object) {
        super(Event_1.EventSet.ObjectUpdated);
        this.model = model;
        this.object = object;
        this._exists = Event_1.ExistState.Unset;
    }
    get updated() {
        return this._updated;
    }
    set updated(value) {
        if (value == null) {
            return;
        }
        this._updated = value;
        this._exists = Event_1.ExistState.Exists;
    }
    get exists() {
        return this._exists;
    }
    set exists(value) {
        if (value == Event_1.ExistState.DoesNotExist && this._exists == Event_1.ExistState.Exists) {
            return;
        }
        if (value == Event_1.ExistState.Unset) {
            throw new Error(`Cannot set the 'Unset' ExistState on a value from outside of the Event. This is a reserved state for a virgin Event.`);
        }
        this._exists = value;
    }
}
exports.UpdateObjectEvent = UpdateObjectEvent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXBkYXRlT2JqZWN0RXZlbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZXZlbnRzL1VwZGF0ZU9iamVjdEV2ZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLG1DQUFzRDtBQUd0RCxNQUFhLGlCQUF5QyxTQUFRLGFBQUs7SUFpQ2hFLFlBQXFCLEtBQWEsRUFBVyxNQUFTO1FBQ25ELEtBQUssQ0FBQyxnQkFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFBO1FBRFgsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUFXLFdBQU0sR0FBTixNQUFNLENBQUc7UUFIOUMsWUFBTyxHQUFlLGtCQUFVLENBQUMsS0FBSyxDQUFBO0lBSzlDLENBQUM7SUFsQ0QsSUFBSSxPQUFPO1FBQ1IsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFBO0lBQ3ZCLENBQUM7SUFFRCxJQUFJLE9BQU8sQ0FBQyxLQUFvQjtRQUM3QixJQUFHLEtBQUssSUFBSSxJQUFJLEVBQUU7WUFDZixPQUFNO1NBQ1I7UUFFRCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQTtRQUNyQixJQUFJLENBQUMsT0FBTyxHQUFHLGtCQUFVLENBQUMsTUFBTSxDQUFBO0lBQ25DLENBQUM7SUFFRCxJQUFJLE1BQU07UUFDUCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUE7SUFDdEIsQ0FBQztJQUVELElBQUksTUFBTSxDQUFDLEtBQWlCO1FBQ3pCLElBQUcsS0FBSyxJQUFJLGtCQUFVLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxPQUFPLElBQUksa0JBQVUsQ0FBQyxNQUFNLEVBQUU7WUFDdkUsT0FBTTtTQUNSO1FBRUQsSUFBRyxLQUFLLElBQUksa0JBQVUsQ0FBQyxLQUFLLEVBQUU7WUFDM0IsTUFBTSxJQUFJLEtBQUssQ0FBQyxzSEFBc0gsQ0FBQyxDQUFBO1NBQ3pJO1FBRUQsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUE7SUFDdkIsQ0FBQztDQVFIO0FBcENELDhDQW9DQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0YWNrT2JqZWN0IH0gZnJvbSBcIi4uL1N0YWNrT2JqZWN0XCI7XG5pbXBvcnQgeyBJTW9kZWwgfSBmcm9tIFwiLi4vTW9kZWxcIjtcbmltcG9ydCB7IEV2ZW50LCBFdmVudFNldCwgRXhpc3RTdGF0ZSB9IGZyb20gXCIuL0V2ZW50XCI7XG5cblxuZXhwb3J0IGNsYXNzIFVwZGF0ZU9iamVjdEV2ZW50PFQgZXh0ZW5kcyBTdGFja09iamVjdD4gZXh0ZW5kcyBFdmVudCB7XG4gICBnZXQgdXBkYXRlZCgpOiBUIHwgdW5kZWZpbmVkIHtcbiAgICAgIHJldHVybiB0aGlzLl91cGRhdGVkXG4gICB9XG5cbiAgIHNldCB1cGRhdGVkKHZhbHVlOiBUIHwgdW5kZWZpbmVkKSB7XG4gICAgICBpZih2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgdGhpcy5fdXBkYXRlZCA9IHZhbHVlXG4gICAgICB0aGlzLl9leGlzdHMgPSBFeGlzdFN0YXRlLkV4aXN0c1xuICAgfVxuXG4gICBnZXQgZXhpc3RzKCk6IEV4aXN0U3RhdGUge1xuICAgICAgcmV0dXJuIHRoaXMuX2V4aXN0c1xuICAgfVxuXG4gICBzZXQgZXhpc3RzKHZhbHVlOiBFeGlzdFN0YXRlKSB7XG4gICAgICBpZih2YWx1ZSA9PSBFeGlzdFN0YXRlLkRvZXNOb3RFeGlzdCAmJiB0aGlzLl9leGlzdHMgPT0gRXhpc3RTdGF0ZS5FeGlzdHMpIHtcbiAgICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBpZih2YWx1ZSA9PSBFeGlzdFN0YXRlLlVuc2V0KSB7XG4gICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBzZXQgdGhlICdVbnNldCcgRXhpc3RTdGF0ZSBvbiBhIHZhbHVlIGZyb20gb3V0c2lkZSBvZiB0aGUgRXZlbnQuIFRoaXMgaXMgYSByZXNlcnZlZCBzdGF0ZSBmb3IgYSB2aXJnaW4gRXZlbnQuYClcbiAgICAgIH1cblxuICAgICAgdGhpcy5fZXhpc3RzID0gdmFsdWVcbiAgIH1cblxuICAgcHJpdmF0ZSBfZXhpc3RzOiBFeGlzdFN0YXRlID0gRXhpc3RTdGF0ZS5VbnNldFxuICAgcHJpdmF0ZSBfdXBkYXRlZDogVCB8IHVuZGVmaW5lZFxuXG4gICBjb25zdHJ1Y3RvcihyZWFkb25seSBtb2RlbDogSU1vZGVsLCByZWFkb25seSBvYmplY3Q6IFQpIHtcbiAgICAgIHN1cGVyKEV2ZW50U2V0Lk9iamVjdFVwZGF0ZWQpXG4gICB9XG59Il19