"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Stack = void 0;
const Cache_1 = require("../Cache");
const EventRouter_1 = require("../events/EventRouter");
const RequestForChange_1 = require("../events/RequestForChange");
const UidKeeper_1 = require("../UidKeeper");
const Eventing_1 = require("../utils/Eventing");
const StackContext_1 = require("./StackContext");
const StackCreate_1 = require("./StackCreate");
const StackDelete_1 = require("./StackDelete");
const StackGet_1 = require("./StackGet");
const StackUpdate_1 = require("./StackUpdate");
class Stack extends Eventing_1.CombinedEventEmitter {
    constructor(options) {
        super();
        this.uid = (options === null || options === void 0 ? void 0 : options.uidKeeper) || new UidKeeper_1.UidKeeper();
        this.cache = new Cache_1.Cache();
        this.delete = new StackDelete_1.StackDelete();
        this.router = new EventRouter_1.EventRouter();
        this.rfc = new RequestForChange_1.RequestForChangeSource(this.router);
        this.context = new StackContext_1.StackContext(this, this.rfc, this.cache, this.uid);
        this.get = new StackGet_1.StackGet(this.context);
        this.create = new StackCreate_1.StackCreate(this.get, this.context);
        this.update = new StackUpdate_1.StackUpdate(this.context);
    }
    static create(options) {
        return new Stack(options);
    }
    async hasId(id) {
        return this.context.orchestrator.hasId(id);
    }
}
exports.Stack = Stack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3RhY2svU3RhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0NBQXdDO0FBQ3hDLHVEQUFpRTtBQUNqRSxpRUFBNEY7QUFDNUYsNENBQW9EO0FBQ3BELGdEQUErRTtBQUMvRSxpREFBNkM7QUFDN0MsK0NBQXlEO0FBQ3pELCtDQUF5RDtBQUN6RCx5Q0FBZ0Q7QUFDaEQsK0NBQXlEO0FBb0J6RCxNQUFhLEtBQ1YsU0FBUSwrQkFBb0I7SUFjNUIsWUFBWSxPQUFzQjtRQUMvQixLQUFLLEVBQUUsQ0FBQTtRQUVQLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQSxPQUFPLGFBQVAsT0FBTyx1QkFBUCxPQUFPLENBQUUsU0FBUyxLQUFJLElBQUkscUJBQVMsRUFBRSxDQUFBO1FBQ2hELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxhQUFLLEVBQUUsQ0FBQTtRQUV4QixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUkseUJBQVcsRUFBRSxDQUFBO1FBRS9CLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSx5QkFBVyxFQUFFLENBQUE7UUFDL0IsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLHlDQUFzQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUVsRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksMkJBQVksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUVyRSxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksbUJBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDckMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLHlCQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDckQsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLHlCQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQzlDLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQXNCO1FBQ2pDLE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUE7SUFDNUIsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBVTtRQUNuQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQTtJQUM3QyxDQUFDO0NBQ0g7QUF4Q0Qsc0JBd0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FjaGUsIElDYWNoZSB9IGZyb20gXCIuLi9DYWNoZVwiXG5pbXBvcnQgeyBFdmVudFJvdXRlciwgSUV2ZW50Um91dGVyIH0gZnJvbSBcIi4uL2V2ZW50cy9FdmVudFJvdXRlclwiXG5pbXBvcnQgeyBJUmVxdWVzdEZvckNoYW5nZVNvdXJjZSwgUmVxdWVzdEZvckNoYW5nZVNvdXJjZSB9IGZyb20gXCIuLi9ldmVudHMvUmVxdWVzdEZvckNoYW5nZVwiXG5pbXBvcnQgeyBJVWlkS2VlcGVyLCBVaWRLZWVwZXIgfSBmcm9tIFwiLi4vVWlkS2VlcGVyXCJcbmltcG9ydCB7IENvbWJpbmVkRXZlbnRFbWl0dGVyLCBJQ29tYmluZWRFdmVudEVtaXR0ZXIgfSBmcm9tIFwiLi4vdXRpbHMvRXZlbnRpbmdcIlxuaW1wb3J0IHsgU3RhY2tDb250ZXh0IH0gZnJvbSBcIi4vU3RhY2tDb250ZXh0XCJcbmltcG9ydCB7IElTdGFja0NyZWF0ZSwgU3RhY2tDcmVhdGUgfSBmcm9tIFwiLi9TdGFja0NyZWF0ZVwiXG5pbXBvcnQgeyBJU3RhY2tEZWxldGUsIFN0YWNrRGVsZXRlIH0gZnJvbSBcIi4vU3RhY2tEZWxldGVcIlxuaW1wb3J0IHsgSVN0YWNrR2V0LCBTdGFja0dldCB9IGZyb20gXCIuL1N0YWNrR2V0XCJcbmltcG9ydCB7IElTdGFja1VwZGF0ZSwgU3RhY2tVcGRhdGUgfSBmcm9tIFwiLi9TdGFja1VwZGF0ZVwiXG5cbmV4cG9ydCB0eXBlIFN0YWNrT3B0aW9ucyA9IHtcbiAgIHVpZEtlZXBlcj86IElVaWRLZWVwZXJcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJU3RhY2sgZXh0ZW5kcyBJQ29tYmluZWRFdmVudEVtaXR0ZXIge1xuICAgcmVhZG9ubHkgY3JlYXRlOiBJU3RhY2tDcmVhdGVcbiAgIHJlYWRvbmx5IGRlbGV0ZTogSVN0YWNrRGVsZXRlXG4gICByZWFkb25seSBnZXQ6IElTdGFja0dldFxuICAgcmVhZG9ubHkgdXBkYXRlOiBJU3RhY2tVcGRhdGVcblxuICAgLyoqXG4gICAgKiBEZXRlcm1pbmVzIGlmIGFuIGlkIGlzIGFscmVhZHkgaW4gdXNlLlxuICAgICogXG4gICAgKiBAcGFyYW0gaWQgVGhlIGlkXG4gICAgKi9cbiAgIGhhc0lkKGlkOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+XG59XG5cbmV4cG9ydCBjbGFzcyBTdGFja1xuICAgZXh0ZW5kcyBDb21iaW5lZEV2ZW50RW1pdHRlciBcbiAgIGltcGxlbWVudHMgSVN0YWNrXG4gICB7XG4gICByZWFkb25seSBnZXQ6IElTdGFja0dldFxuICAgcmVhZG9ubHkgY3JlYXRlOiBJU3RhY2tDcmVhdGVcbiAgIHJlYWRvbmx5IHVwZGF0ZTogSVN0YWNrVXBkYXRlXG4gICByZWFkb25seSBkZWxldGU6IElTdGFja0RlbGV0ZVxuICAgcmVhZG9ubHkgdWlkOiBJVWlkS2VlcGVyXG5cbiAgIHByaXZhdGUgcmZjOiBJUmVxdWVzdEZvckNoYW5nZVNvdXJjZVxuICAgcHJpdmF0ZSByb3V0ZXI6IElFdmVudFJvdXRlclxuICAgcHJpdmF0ZSBjb250ZXh0OiBTdGFja0NvbnRleHRcbiAgIHByaXZhdGUgY2FjaGU6IElDYWNoZVxuXG4gICBjb25zdHJ1Y3RvcihvcHRpb25zPzogU3RhY2tPcHRpb25zKSB7XG4gICAgICBzdXBlcigpXG4gICAgICBcbiAgICAgIHRoaXMudWlkID0gb3B0aW9ucz8udWlkS2VlcGVyIHx8IG5ldyBVaWRLZWVwZXIoKVxuICAgICAgdGhpcy5jYWNoZSA9IG5ldyBDYWNoZSgpXG4gICAgICBcbiAgICAgIHRoaXMuZGVsZXRlID0gbmV3IFN0YWNrRGVsZXRlKClcblxuICAgICAgdGhpcy5yb3V0ZXIgPSBuZXcgRXZlbnRSb3V0ZXIoKVxuICAgICAgdGhpcy5yZmMgPSBuZXcgUmVxdWVzdEZvckNoYW5nZVNvdXJjZSh0aGlzLnJvdXRlcilcblxuICAgICAgdGhpcy5jb250ZXh0ID0gbmV3IFN0YWNrQ29udGV4dCh0aGlzLCB0aGlzLnJmYywgdGhpcy5jYWNoZSwgdGhpcy51aWQpXG5cbiAgICAgIHRoaXMuZ2V0ID0gbmV3IFN0YWNrR2V0KHRoaXMuY29udGV4dClcbiAgICAgIHRoaXMuY3JlYXRlID0gbmV3IFN0YWNrQ3JlYXRlKHRoaXMuZ2V0LCB0aGlzLmNvbnRleHQpXG4gICAgICB0aGlzLnVwZGF0ZSA9IG5ldyBTdGFja1VwZGF0ZSh0aGlzLmNvbnRleHQpXG4gICB9XG5cbiAgIHN0YXRpYyBjcmVhdGUob3B0aW9ucz86IFN0YWNrT3B0aW9ucyk6IElTdGFjayB7XG4gICAgICByZXR1cm4gbmV3IFN0YWNrKG9wdGlvbnMpXG4gICB9XG5cbiAgIGFzeW5jIGhhc0lkKGlkOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICAgIHJldHVybiB0aGlzLmNvbnRleHQub3JjaGVzdHJhdG9yLmhhc0lkKGlkKVxuICAgfVxufSJdfQ==