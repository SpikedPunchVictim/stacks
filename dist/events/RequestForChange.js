"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestForChange = exports.RequestForChangeSource = void 0;
class RequestForChangeSource {
    constructor(router) {
        this.router = router;
    }
    create(action) {
        return new RequestForChange(action, this.router);
    }
}
exports.RequestForChangeSource = RequestForChangeSource;
class RequestForChange {
    constructor(action, router) {
        this.action = action;
        this.router = router;
        this.fulfills = new Array();
        this.rejects = new Array();
    }
    fulfill(handler) {
        this.fulfills.push(handler);
        return this;
    }
    reject(handler) {
        this.rejects.push(handler);
        return this;
    }
    async commit() {
        try {
            await this.router.raise(this.action);
            for (let handler of this.fulfills) {
                await handler(this.action);
            }
        }
        catch (err) {
            for (let handler of this.rejects) {
                await handler(this.action, err);
            }
        }
    }
}
exports.RequestForChange = RequestForChange;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVxdWVzdEZvckNoYW5nZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ldmVudHMvUmVxdWVzdEZvckNoYW5nZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFTQSxNQUFhLHNCQUFzQjtJQUdoQyxZQUFZLE1BQW9CO1FBQzdCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFBO0lBQ3ZCLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBYztRQUNsQixPQUFPLElBQUksZ0JBQWdCLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNuRCxDQUFDO0NBQ0g7QUFWRCx3REFVQztBQVNELE1BQWEsZ0JBQWdCO0lBTTFCLFlBQVksTUFBYyxFQUFFLE1BQW9CO1FBQzdDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFBO1FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFBO1FBQ3BCLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxLQUFLLEVBQWMsQ0FBQTtRQUN2QyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksS0FBSyxFQUFjLENBQUE7SUFDekMsQ0FBQztJQUVELE9BQU8sQ0FBQyxPQUFtQjtRQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUMzQixPQUFPLElBQUksQ0FBQTtJQUNkLENBQUM7SUFFRCxNQUFNLENBQUMsT0FBbUI7UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDMUIsT0FBTyxJQUFJLENBQUE7SUFDZCxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQU07UUFDVCxJQUFJO1lBQ0QsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7WUFFcEMsS0FBSSxJQUFJLE9BQU8sSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUMvQixNQUFNLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7YUFDNUI7U0FDSDtRQUFDLE9BQU0sR0FBRyxFQUFFO1lBQ1YsS0FBSSxJQUFJLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUM5QixNQUFNLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQVksQ0FBQyxDQUFBO2FBQzFDO1NBQ0g7SUFDSixDQUFDO0NBQ0g7QUFwQ0QsNENBb0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUV2ZW50IH0gZnJvbSBcIi4vRXZlbnRcIlxuaW1wb3J0IHsgSUV2ZW50Um91dGVyIH0gZnJvbSBcIi4vRXZlbnRSb3V0ZXJcIlxuXG5leHBvcnQgdHlwZSBSZmNIYW5kbGVyID0gKGV2ZW50OiBJRXZlbnQsIGVycj86IEVycm9yKSA9PiBQcm9taXNlPHZvaWQ+XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVJlcXVlc3RGb3JDaGFuZ2VTb3VyY2Uge1xuICAgY3JlYXRlKGFjdGlvbjogSUV2ZW50KTogSVJlcXVlc3RGb3JDaGFuZ2Vcbn1cblxuZXhwb3J0IGNsYXNzIFJlcXVlc3RGb3JDaGFuZ2VTb3VyY2UgaW1wbGVtZW50cyBJUmVxdWVzdEZvckNoYW5nZVNvdXJjZSB7XG4gICByZWFkb25seSByb3V0ZXI6IElFdmVudFJvdXRlclxuICAgXG4gICBjb25zdHJ1Y3Rvcihyb3V0ZXI6IElFdmVudFJvdXRlcikge1xuICAgICAgdGhpcy5yb3V0ZXIgPSByb3V0ZXJcbiAgIH1cblxuICAgY3JlYXRlKGFjdGlvbjogSUV2ZW50KTogSVJlcXVlc3RGb3JDaGFuZ2Uge1xuICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0Rm9yQ2hhbmdlKGFjdGlvbiwgdGhpcy5yb3V0ZXIpXG4gICB9XG59XG5cblxuZXhwb3J0IGludGVyZmFjZSBJUmVxdWVzdEZvckNoYW5nZSB7XG4gICBjb21taXQoKTogUHJvbWlzZTx2b2lkPlxuICAgZnVsZmlsbChoYW5kbGVyOiBSZmNIYW5kbGVyKTogSVJlcXVlc3RGb3JDaGFuZ2VcbiAgIHJlamVjdChoYW5kbGVyOiBSZmNIYW5kbGVyKTogSVJlcXVlc3RGb3JDaGFuZ2Vcbn1cblxuZXhwb3J0IGNsYXNzIFJlcXVlc3RGb3JDaGFuZ2UgaW1wbGVtZW50cyBJUmVxdWVzdEZvckNoYW5nZSB7XG4gICByZWFkb25seSByb3V0ZXI6IElFdmVudFJvdXRlclxuICAgcmVhZG9ubHkgYWN0aW9uOiBJRXZlbnRcbiAgIHByaXZhdGUgcmVqZWN0czogQXJyYXk8UmZjSGFuZGxlcj5cbiAgIHByaXZhdGUgZnVsZmlsbHM6IEFycmF5PFJmY0hhbmRsZXI+XG5cbiAgIGNvbnN0cnVjdG9yKGFjdGlvbjogSUV2ZW50LCByb3V0ZXI6IElFdmVudFJvdXRlcikge1xuICAgICAgdGhpcy5hY3Rpb24gPSBhY3Rpb25cbiAgICAgIHRoaXMucm91dGVyID0gcm91dGVyXG4gICAgICB0aGlzLmZ1bGZpbGxzID0gbmV3IEFycmF5PFJmY0hhbmRsZXI+KClcbiAgICAgIHRoaXMucmVqZWN0cyA9IG5ldyBBcnJheTxSZmNIYW5kbGVyPigpXG4gICB9XG5cbiAgIGZ1bGZpbGwoaGFuZGxlcjogUmZjSGFuZGxlcik6IElSZXF1ZXN0Rm9yQ2hhbmdlIHtcbiAgICAgIHRoaXMuZnVsZmlsbHMucHVzaChoYW5kbGVyKVxuICAgICAgcmV0dXJuIHRoaXNcbiAgIH1cbiAgIFxuICAgcmVqZWN0KGhhbmRsZXI6IFJmY0hhbmRsZXIpOiBJUmVxdWVzdEZvckNoYW5nZSB7XG4gICAgICB0aGlzLnJlamVjdHMucHVzaChoYW5kbGVyKVxuICAgICAgcmV0dXJuIHRoaXNcbiAgIH1cblxuICAgYXN5bmMgY29tbWl0KCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgIGF3YWl0IHRoaXMucm91dGVyLnJhaXNlKHRoaXMuYWN0aW9uKVxuXG4gICAgICAgICBmb3IobGV0IGhhbmRsZXIgb2YgdGhpcy5mdWxmaWxscykge1xuICAgICAgICAgICAgYXdhaXQgaGFuZGxlcih0aGlzLmFjdGlvbilcbiAgICAgICAgIH1cbiAgICAgIH0gY2F0Y2goZXJyKSB7XG4gICAgICAgICBmb3IobGV0IGhhbmRsZXIgb2YgdGhpcy5yZWplY3RzKSB7XG4gICAgICAgICAgICBhd2FpdCBoYW5kbGVyKHRoaXMuYWN0aW9uLCBlcnIgYXMgRXJyb3IpXG4gICAgICAgICB9XG4gICAgICB9XG4gICB9XG59Il19