"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildErrorResponse = buildErrorResponse;
exports.buildMinimalResponse = buildMinimalResponse;
exports.buildDetailedResponse = buildDetailedResponse;
function buildErrorResponse(errors) {
    if (!Array.isArray(errors)) {
        errors = [errors];
    }
    let message = errors.reduce((msg, error) => {
        msg.push(error.toString());
        return msg;
    }, new Array());
    return {
        message: message.join('\n')
    };
}
function buildMinimalResponse(objects, props = new Array()) {
    return objects.map(obj => {
        let res = { id: obj.id };
        for (let prop of props) {
            res[prop] = obj[prop];
        }
        return res;
    });
}
function buildDetailedResponse(object, props) {
    if (props == null) {
        props = new Array();
        props.push(...Object.keys(object));
    }
    let response = {
        id: object.id
    };
    props.reduce((res, prop) => {
        res[prop] = object[prop];
        return res;
    }, response);
    return response;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzcG9uc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUmVzcG9uc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFtQkEsZ0RBYUM7QUFFRCxvREFVQztBQUVELHNEQWdCQztBQTNDRCxTQUFnQixrQkFBa0IsQ0FBQyxNQUF1QjtJQUN2RCxJQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO1FBQ3pCLE1BQU0sR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ3BCLENBQUM7SUFFRCxJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1FBQ3hDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUE7UUFDMUIsT0FBTyxHQUFHLENBQUE7SUFDYixDQUFDLEVBQUUsSUFBSSxLQUFLLEVBQVUsQ0FBQyxDQUFBO0lBRXZCLE9BQU87UUFDSixPQUFPLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7S0FDN0IsQ0FBQTtBQUNKLENBQUM7QUFFRCxTQUFnQixvQkFBb0IsQ0FBQyxPQUFzQixFQUFFLFFBQWtCLElBQUksS0FBSyxFQUFVO0lBQy9GLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUN0QixJQUFJLEdBQUcsR0FBUSxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUE7UUFFN0IsS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEVBQUUsQ0FBQztZQUN0QixHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQ3hCLENBQUM7UUFFRCxPQUFPLEdBQUcsQ0FBQTtJQUNiLENBQUMsQ0FBQyxDQUFBO0FBQ0wsQ0FBQztBQUVELFNBQWdCLHFCQUFxQixDQUFDLE1BQW1CLEVBQUUsS0FBZ0I7SUFDeEUsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFLENBQUM7UUFDakIsS0FBSyxHQUFHLElBQUksS0FBSyxFQUFVLENBQUE7UUFDM0IsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQTtJQUNyQyxDQUFDO0lBRUQsSUFBSSxRQUFRLEdBQXlCO1FBQ2xDLEVBQUUsRUFBRSxNQUFNLENBQUMsRUFBRTtLQUNmLENBQUE7SUFFRCxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFO1FBQ3hCLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDeEIsT0FBTyxHQUFHLENBQUE7SUFDYixDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUE7SUFFWixPQUFPLFFBQVEsQ0FBQTtBQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhY2tPYmplY3QgfSBmcm9tICdAc3Bpa2VkcHVuY2gvc3RhY2tzJ1xuXG5leHBvcnQgdHlwZSBSZXN0UmVzcG9uc2VNaW5pbWFsID0ge1xuICAgaWQ6IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBSZXN0UmVzcG9uc2VEZXRhaWxlZCA9IHtcbiAgIGlkOiBzdHJpbmdcbiAgIFtrZXk6IHN0cmluZ106IGFueVxufVxuXG5leHBvcnQgdHlwZSBSZXN0RXJyb3JSZXNwb25zZSA9IHtcbiAgIG1lc3NhZ2U6IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBSZXN0U3VjY2Vzc1Jlc3BvbnNlID0ge1xuICAgbWVzc2FnZTogc3RyaW5nXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBidWlsZEVycm9yUmVzcG9uc2UoZXJyb3JzOiBFcnJvciB8IEVycm9yW10pOiBSZXN0RXJyb3JSZXNwb25zZSB7XG4gICBpZighQXJyYXkuaXNBcnJheShlcnJvcnMpKSB7XG4gICAgICBlcnJvcnMgPSBbZXJyb3JzXVxuICAgfVxuXG4gICBsZXQgbWVzc2FnZSA9IGVycm9ycy5yZWR1Y2UoKG1zZywgZXJyb3IpID0+IHtcbiAgICAgIG1zZy5wdXNoKGVycm9yLnRvU3RyaW5nKCkpXG4gICAgICByZXR1cm4gbXNnXG4gICB9LCBuZXcgQXJyYXk8c3RyaW5nPigpKVxuXG4gICByZXR1cm4ge1xuICAgICAgbWVzc2FnZTogbWVzc2FnZS5qb2luKCdcXG4nKVxuICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRNaW5pbWFsUmVzcG9uc2Uob2JqZWN0czogU3RhY2tPYmplY3RbXSwgcHJvcHM6IHN0cmluZ1tdID0gbmV3IEFycmF5PHN0cmluZz4oKSk6IFJlc3RSZXNwb25zZU1pbmltYWxbXSB7XG4gICByZXR1cm4gb2JqZWN0cy5tYXAob2JqID0+IHtcbiAgICAgIGxldCByZXM6IGFueSA9IHsgaWQ6IG9iai5pZCB9XG5cbiAgICAgIGZvciAobGV0IHByb3Agb2YgcHJvcHMpIHtcbiAgICAgICAgIHJlc1twcm9wXSA9IG9ialtwcm9wXVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzXG4gICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGREZXRhaWxlZFJlc3BvbnNlKG9iamVjdDogU3RhY2tPYmplY3QsIHByb3BzPzogc3RyaW5nW10pOiBSZXN0UmVzcG9uc2VEZXRhaWxlZCB7XG4gICBpZiAocHJvcHMgPT0gbnVsbCkge1xuICAgICAgcHJvcHMgPSBuZXcgQXJyYXk8c3RyaW5nPigpXG4gICAgICBwcm9wcy5wdXNoKC4uLk9iamVjdC5rZXlzKG9iamVjdCkpXG4gICB9XG5cbiAgIGxldCByZXNwb25zZTogUmVzdFJlc3BvbnNlRGV0YWlsZWQgPSB7XG4gICAgICBpZDogb2JqZWN0LmlkXG4gICB9XG5cbiAgIHByb3BzLnJlZHVjZSgocmVzLCBwcm9wKSA9PiB7XG4gICAgICByZXNbcHJvcF0gPSBvYmplY3RbcHJvcF1cbiAgICAgIHJldHVybiByZXNcbiAgIH0sIHJlc3BvbnNlKVxuXG4gICByZXR1cm4gcmVzcG9uc2Vcbn0iXX0=