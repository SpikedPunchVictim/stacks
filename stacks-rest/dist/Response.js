"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildDetailedResponse = exports.buildMinimalResponse = exports.buildErrorResponse = void 0;
function buildErrorResponse(errors) {
    if (!Array.isArray(errors)) {
        errors = [errors];
    }
    let message = errors.reduce((msg, error) => {
        msg.push(error.toString());
        return msg;
    }, new Array());
    return {
        message: message.join('\n')
    };
}
exports.buildErrorResponse = buildErrorResponse;
function buildMinimalResponse(objects, props = new Array()) {
    return objects.map(obj => {
        let res = { id: obj.id };
        for (let prop of props) {
            res[prop] = obj[prop];
        }
        return res;
    });
}
exports.buildMinimalResponse = buildMinimalResponse;
function buildDetailedResponse(object, props) {
    if (props == null) {
        props = new Array();
        props.push(...Object.keys(object));
    }
    let response = {
        id: object.id
    };
    props.reduce((res, prop) => {
        res[prop] = object[prop];
        return res;
    }, response);
    return response;
}
exports.buildDetailedResponse = buildDetailedResponse;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzcG9uc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUmVzcG9uc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBbUJBLFNBQWdCLGtCQUFrQixDQUFDLE1BQXVCO0lBQ3ZELElBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQ3hCLE1BQU0sR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0tBQ25CO0lBRUQsSUFBSSxPQUFPLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRTtRQUN4QyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFBO1FBQzFCLE9BQU8sR0FBRyxDQUFBO0lBQ2IsQ0FBQyxFQUFFLElBQUksS0FBSyxFQUFVLENBQUMsQ0FBQTtJQUV2QixPQUFPO1FBQ0osT0FBTyxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0tBQzdCLENBQUE7QUFDSixDQUFDO0FBYkQsZ0RBYUM7QUFFRCxTQUFnQixvQkFBb0IsQ0FBQyxPQUFzQixFQUFFLFFBQWtCLElBQUksS0FBSyxFQUFVO0lBQy9GLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUN0QixJQUFJLEdBQUcsR0FBUSxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUE7UUFFN0IsS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEVBQUU7WUFDckIsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQTtTQUN2QjtRQUVELE9BQU8sR0FBRyxDQUFBO0lBQ2IsQ0FBQyxDQUFDLENBQUE7QUFDTCxDQUFDO0FBVkQsb0RBVUM7QUFFRCxTQUFnQixxQkFBcUIsQ0FBQyxNQUFtQixFQUFFLEtBQWdCO0lBQ3hFLElBQUksS0FBSyxJQUFJLElBQUksRUFBRTtRQUNoQixLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQVUsQ0FBQTtRQUMzQixLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFBO0tBQ3BDO0lBRUQsSUFBSSxRQUFRLEdBQXlCO1FBQ2xDLEVBQUUsRUFBRSxNQUFNLENBQUMsRUFBRTtLQUNmLENBQUE7SUFFRCxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFO1FBQ3hCLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDeEIsT0FBTyxHQUFHLENBQUE7SUFDYixDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUE7SUFFWixPQUFPLFFBQVEsQ0FBQTtBQUNsQixDQUFDO0FBaEJELHNEQWdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0YWNrT2JqZWN0IH0gZnJvbSAnQHNwaWtlZHB1bmNoL3N0YWNrcydcblxuZXhwb3J0IHR5cGUgUmVzdFJlc3BvbnNlTWluaW1hbCA9IHtcbiAgIGlkOiBzdHJpbmdcbn1cblxuZXhwb3J0IHR5cGUgUmVzdFJlc3BvbnNlRGV0YWlsZWQgPSB7XG4gICBpZDogc3RyaW5nXG4gICBba2V5OiBzdHJpbmddOiBhbnlcbn1cblxuZXhwb3J0IHR5cGUgUmVzdEVycm9yUmVzcG9uc2UgPSB7XG4gICBtZXNzYWdlOiBzdHJpbmdcbn1cblxuZXhwb3J0IHR5cGUgUmVzdFN1Y2Nlc3NSZXNwb25zZSA9IHtcbiAgIG1lc3NhZ2U6IHN0cmluZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRFcnJvclJlc3BvbnNlKGVycm9yczogRXJyb3IgfCBFcnJvcltdKTogUmVzdEVycm9yUmVzcG9uc2Uge1xuICAgaWYoIUFycmF5LmlzQXJyYXkoZXJyb3JzKSkge1xuICAgICAgZXJyb3JzID0gW2Vycm9yc11cbiAgIH1cblxuICAgbGV0IG1lc3NhZ2UgPSBlcnJvcnMucmVkdWNlKChtc2csIGVycm9yKSA9PiB7XG4gICAgICBtc2cucHVzaChlcnJvci50b1N0cmluZygpKVxuICAgICAgcmV0dXJuIG1zZ1xuICAgfSwgbmV3IEFycmF5PHN0cmluZz4oKSlcblxuICAgcmV0dXJuIHtcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2Uuam9pbignXFxuJylcbiAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkTWluaW1hbFJlc3BvbnNlKG9iamVjdHM6IFN0YWNrT2JqZWN0W10sIHByb3BzOiBzdHJpbmdbXSA9IG5ldyBBcnJheTxzdHJpbmc+KCkpOiBSZXN0UmVzcG9uc2VNaW5pbWFsW10ge1xuICAgcmV0dXJuIG9iamVjdHMubWFwKG9iaiA9PiB7XG4gICAgICBsZXQgcmVzOiBhbnkgPSB7IGlkOiBvYmouaWQgfVxuXG4gICAgICBmb3IgKGxldCBwcm9wIG9mIHByb3BzKSB7XG4gICAgICAgICByZXNbcHJvcF0gPSBvYmpbcHJvcF1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc1xuICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkRGV0YWlsZWRSZXNwb25zZShvYmplY3Q6IFN0YWNrT2JqZWN0LCBwcm9wcz86IHN0cmluZ1tdKTogUmVzdFJlc3BvbnNlRGV0YWlsZWQge1xuICAgaWYgKHByb3BzID09IG51bGwpIHtcbiAgICAgIHByb3BzID0gbmV3IEFycmF5PHN0cmluZz4oKVxuICAgICAgcHJvcHMucHVzaCguLi5PYmplY3Qua2V5cyhvYmplY3QpKVxuICAgfVxuXG4gICBsZXQgcmVzcG9uc2U6IFJlc3RSZXNwb25zZURldGFpbGVkID0ge1xuICAgICAgaWQ6IG9iamVjdC5pZFxuICAgfVxuXG4gICBwcm9wcy5yZWR1Y2UoKHJlcywgcHJvcCkgPT4ge1xuICAgICAgcmVzW3Byb3BdID0gb2JqZWN0W3Byb3BdXG4gICAgICByZXR1cm4gcmVzXG4gICB9LCByZXNwb25zZSlcblxuICAgcmV0dXJuIHJlc3BvbnNlXG59Il19